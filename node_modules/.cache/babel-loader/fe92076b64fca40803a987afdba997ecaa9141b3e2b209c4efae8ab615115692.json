{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Signup Page\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSignup, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n    placeholder: \"Enter your email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    placeholder: \"Enter your password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.name = $event),\n    placeholder: \"Enter your name\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.name]]), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Signup\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","handleSignup","type","_cache","$event","email","placeholder","required","password","name"],"sources":["/home/vivian-lima/Documents/vscode/getting_started_templates/getting-started-template-vue/src/components/signupPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Signup Page</h2>\n    <form @submit.prevent=\"handleSignup\">\n      <input\n        type=\"email\"\n        v-model=\"email\"\n        placeholder=\"Enter your email\"\n        required\n      />\n      <br />\n      <input\n        type=\"password\"\n        v-model=\"password\"\n        placeholder=\"Enter your password\"\n        required\n      />\n      <br />\n      <input\n        type=\"text\"\n        v-model=\"name\"\n        placeholder=\"Enter your name\"\n        required\n      />\n      <br />\n      <button type=\"submit\">Signup</button>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { skapi } from '../main'; \n\nconst email = ref('');\nconst password = ref('');\nconst name = ref('');\n\nconst handleSignup = () => {\n  const parameters = {\n    email: email.value,\n    password: password.value,\n    name: name.value,\n  };\n\n  skapi\n    .signup(parameters)\n    .then(() => {\n      window.location.href = '/login';\n    })\n    .catch((err) => {\n      window.alert(err.message);\n    });\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CA0BM,c,0BAzBJC,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAuBO;IAvBAC,QAAM,EAHjBC,cAAA,CAG2BC,MAAA,CAAAC,YAAY;sBACjCJ,mBAAA,CAKE;IAJAK,IAAI,EAAC,OAAO;IALpB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMiBJ,MAAA,CAAAK,KAAK,GAAAD,MAAA;IACdE,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAR;iDAFSP,MAAA,CAAAK,KAAK,E,6BAIhBR,mBAAA,CAAM,sC,gBACNA,mBAAA,CAKE;IAJAK,IAAI,EAAC,UAAU;IAZvB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaiBJ,MAAA,CAAAQ,QAAQ,GAAAJ,MAAA;IACjBE,WAAW,EAAC,qBAAqB;IACjCC,QAAQ,EAAR;iDAFSP,MAAA,CAAAQ,QAAQ,E,6BAInBX,mBAAA,CAAM,sC,gBACNA,mBAAA,CAKE;IAJAK,IAAI,EAAC,MAAM;IAnBnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBiBJ,MAAA,CAAAS,IAAI,GAAAL,MAAA;IACbE,WAAW,EAAC,iBAAiB;IAC7BC,QAAQ,EAAR;iDAFSP,MAAA,CAAAS,IAAI,E,6BAIfZ,mBAAA,CAAM,sC,0BACNA,mBAAA,CAAqC;IAA7BK,IAAI,EAAC;EAAQ,GAAC,QAAM,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}