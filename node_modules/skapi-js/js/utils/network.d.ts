import { Form, FetchOptions, ProgressCallback } from '../Types';
export declare function request(url: string, data?: Form<any>, options?: {
    fetchOptions?: FetchOptions;
    auth?: boolean;
    method?: string;
    bypassAwaitConnection?: boolean;
    responseType?: 'json' | 'blob' | 'text' | 'arrayBuffer' | 'formData' | 'document';
    contentType?: string;
}, _etc?: {
    ignoreService: boolean;
}): Promise<any>;
export declare function uploadFiles(fileList: FormData | HTMLFormElement | SubmitEvent, params: {
    record_id: string;
    progress?: ProgressCallback;
}): Promise<{
    completed: File[];
    failed: File[];
    bin_endpoints: string[];
}>;
export declare function formHandler(options?: {
    preventMultipleCalls: boolean;
}): (target: object, propertyKey: string, descriptor: any) => void;
export declare function getFormResponse(): Promise<any>;
